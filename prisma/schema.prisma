// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   String  @id @default(uuid())
  name String
  email String @unique
  password String?
  isAdmin Boolean @default(false)
  timestamp DateTime @default(now())
  auth_type provider
  posts Post[]
  comments Comment[]
  likes Like[]
  reply reply[]
}
model Post {
  id        String  @id @default(uuid())
  title     String
  content   String
  imageUrl  String?
  published Boolean @default(false)
  timestamp DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  likes     Like[]
}
model Comment {
  id        String   @id @default(uuid())
  content   String
  timestamp DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  reply     reply[]
}
model reply {
  id        String   @id @default(uuid())
  content   String
  timestamp DateTime @default(now())
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
}
model Like {
  id        String  @id @default(uuid())
  timestamp DateTime @default(now()) 
  islike    Boolean @default(false)
  post      Post    @relation(fields: [postId], references: [id])
  postId    String
  author    User    @relation(fields: [authorId], references: [id])
  authorId  String
}
enum provider {
  google
  github
  password
}